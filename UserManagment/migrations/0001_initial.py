# Generated by Django 4.0.6 on 2023-08-31 11:03

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='bussiness_types',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True)),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('updated_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'bussiness_types',
            },
        ),
        migrations.CreateModel(
            name='industries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True)),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('updated_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'industries',
            },
        ),
        migrations.CreateModel(
            name='package_subscriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True)),
                ('package_name', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('price', models.FloatField()),
                ('updated_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'package_subscriptions',
            },
        ),
        migrations.CreateModel(
            name='personal_access_tokens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True)),
                ('tokenable_type', models.CharField(max_length=30)),
                ('tokenable_id', models.IntegerField()),
                ('name', models.CharField(max_length=20)),
                ('token', models.CharField(max_length=50)),
                ('abilities', models.CharField(max_length=30)),
                ('last_used_at', models.DateTimeField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'personal_access_tokens',
            },
        ),
        migrations.CreateModel(
            name='services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True)),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('updated_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'services',
            },
        ),
        migrations.CreateModel(
            name='users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('company_name', models.CharField(max_length=30)),
                ('company_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='ET')),
                ('contact_person_first_name', models.CharField(max_length=20)),
                ('contact_person_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='ET')),
                ('contact_person_email', models.EmailField(max_length=254)),
                ('employee_number', models.IntegerField()),
                ('industry', models.CharField(max_length=30)),
                ('business_type', models.CharField(max_length=30)),
                ('files', models.CharField(max_length=30)),
                ('usertype', models.CharField(max_length=30)),
                ('email_verified_at', models.DateTimeField(null=True)),
                ('remember_token', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('otp', models.CharField(blank=True, max_length=7, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='password_resets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True)),
                ('token', models.CharField(max_length=50)),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'password_resets',
            },
        ),
        migrations.CreateModel(
            name='customer_subscription_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('package_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='UserManagment.package_subscriptions')),
            ],
            options={
                'db_table': 'customer_subscription_data',
            },
        ),
        migrations.CreateModel(
            name='customer_phones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True)),
                ('name', models.CharField(max_length=30)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='ET')),
                ('updated_at', models.DateTimeField(null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer_phones',
            },
        ),
        migrations.CreateModel(
            name='customer_contents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True)),
                ('campaign_name', models.CharField(max_length=20)),
                ('message', models.TextField()),
                ('ref_number', models.CharField(max_length=20)),
                ('sender', models.CharField(max_length=50)),
                ('updated_at', models.DateTimeField(null=True)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('service_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='UserManagment.services')),
            ],
            options={
                'db_table': 'customer_contents',
            },
        ),
    ]
